{"version":3,"sources":["FilterFunction.js","FilterLast.js","Table.js","App.js","API.js","reportWebVitals.js","index.js"],"names":["FilterFirst","users","updateUsers","useState","inputValue","updateInput","useEffect","filteredUsers","filter","name","first","toLowerCase","indexOf","value","onChange","e","target","FilterLast","last","Table","sortedUsers","updateSortedUsers","className","scope","onClick","updateSort","sort","a","b","map","thumbnail","picture","phone","gender","email","src","App","initialUsers","usersToRender","updateRender","axios","get","then","results","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAsBeA,EApBK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAAkB,EACZC,mBAAS,IADG,mBACvCC,EADuC,KAC3BC,EAD2B,KAe9C,OAZAC,qBAAU,WACR,IAAMC,EACW,KAAfH,EACIH,EACAA,EAAMO,QACJ,qBAAGC,KAAQC,MACHC,cAAcC,QAAQR,EAAWO,gBAAkB,KAGnET,EAAYK,KACX,CAACH,EAAYH,IAGd,uBAAOY,MAAOT,EAAYU,SAAU,SAAAC,GAAC,OAAIV,EAAYU,EAAEC,OAAOH,WCEjDI,EAnBE,SAAC,GAA4B,IAA1BhB,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAAkB,EACTC,mBAAS,IADA,mBACpCC,EADoC,KACxBC,EADwB,KAe3C,OAZAC,qBAAU,WACR,IAAMC,EACW,KAAfH,EACIH,EACAA,EAAMO,QACJ,qBAAGC,KAAQS,KACJP,cAAcC,QAAQR,EAAWO,gBAAkB,KAGlET,EAAYK,KACX,CAACH,EAAYH,IAGd,uBAAOY,MAAOT,EAAYU,SAAU,SAAAC,GAAC,OAAIV,EAAYU,EAAEC,OAAOH,W,OCsDrDM,EArEH,SAAC,GAAe,IAAblB,EAAY,EAAZA,MAAY,EACcE,mBAAS,IADvB,mBACpBiB,EADoB,KACPC,EADO,KAKzB,OAFAf,qBAAU,kBAAMe,EAAkBpB,KAAQ,CAACA,IAGzC,8BACE,wBAAOqB,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIC,MAAM,QACRC,QAAS,WACP,IAAIC,EAAa,YAAIxB,GAAOyB,MAAK,SAACC,EAAGC,GAEnC,OAAID,EAAElB,KAAKC,MAAQkB,EAAEnB,KAAKC,OAChB,EACNiB,EAAElB,KAAKC,MAAQkB,EAAEnB,KAAKC,MACjB,EACC,KAGZW,EAAkBI,IAXtB,mBAaA,oBAAIF,MAAM,QACLC,QAAS,WACN,IAAIC,EAAa,YAAIxB,GAAOyB,MAAK,SAACC,EAAGC,GAEnC,OAAID,EAAElB,KAAKS,KAAOU,EAAEnB,KAAKS,MACf,EACNS,EAAElB,KAAKS,KAAOU,EAAEnB,KAAKS,KAChB,EACC,KAGZG,EAAkBI,IAX1B,kBAaA,oBAAIF,MAAM,QAAV,oBACA,oBAAIA,MAAM,QAAV,mBACA,oBAAIA,MAAM,QAAV,mBACA,oBAAIA,MAAM,QAAV,wBAGJ,gCACGH,EAAYS,KACX,gBACaC,EADb,EACEC,QAAWD,UACXE,EAFF,EAEEA,MACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,MAJF,IAKEzB,KAAQC,EALV,EAKUA,MAAOQ,EALjB,EAKiBA,KALjB,OAOE,+BACE,6BAAKR,IACL,6BAAKQ,IACL,6BAAKe,IACL,6BAAKC,IACL,6BAAKF,IACL,6BACA,qBAAKG,IAAKL,QAPHI,c,uBCnBRE,MA3Bf,WAAgB,IAAD,EACuBjC,mBAAS,IADhC,mBACNkC,EADM,KACQnC,EADR,OAEyBC,mBAAS,IAFlC,mBAENmC,EAFM,KAESC,EAFT,KAQb,OAJAjC,qBAAU,WCRHkC,IAAMC,IAAI,iDDSJC,MAAK,gBAAWC,EAAX,EAAGC,KAAQD,QAAX,OAA2BzC,EAAYyC,QACtD,IAGD,sBAAKrB,UAAU,YAAf,UACA,gDACA,qBAAKA,UAAU,MAAf,SACE,4DAEF,cAAC,EAAD,CAAarB,MAAOoC,EAAcnC,YAAaqC,IAF7C,6BAIF,cAAC,EAAD,CAAYtC,MAAOoC,EAAcnC,YAAaqC,SAG9C,qBAAKjB,UAAU,MAAf,SACA,cAAC,EAAD,CAAOA,UAAU,SAASrB,MAAOqC,UEftBO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBL,MAAK,YAAkD,IAA/CM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b51bec46.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst FilterFirst = ({ users, updateUsers }) => {\n  const [inputValue, updateInput] = useState(\"\");\n\n  useEffect(() => {\n    const filteredUsers =\n      inputValue === \"\"\n        ? users\n        : users.filter(\n            ({ name: { first } }) =>\n              first.toLowerCase().indexOf(inputValue.toLowerCase()) >= 0\n          );\n\n    updateUsers(filteredUsers);\n  }, [inputValue, users]);\n\n  return (\n    <input value={inputValue} onChange={e => updateInput(e.target.value)} />\n  );\n};\n\nexport default FilterFirst;\n\n","import React, { useEffect, useState } from \"react\";\nconst FilterLast = ({ users, updateUsers }) => {\n    const [inputValue, updateInput] = useState(\"\");\n  \n    useEffect(() => {\n      const filteredUsers =\n        inputValue === \"\"\n          ? users\n          : users.filter(\n              ({ name: { last } }) =>\n                last.toLowerCase().indexOf(inputValue.toLowerCase()) >= 0\n            );\n  \n      updateUsers(filteredUsers);\n    }, [inputValue, users]);\n  \n    return (\n      <input value={inputValue} onChange={e => updateInput(e.target.value)} />\n    );\n  };\n  export default FilterLast;","import React, { useState, useEffect } from \"react\";\n\nvar Table = ({ users }) => {\n  var [sortedUsers, updateSortedUsers] = useState([]);\n\n  useEffect(() => updateSortedUsers(users), [users]);\n\n  return (\n    <div>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col-2\"\n              onClick={() => {\n                var updateSort = [...users].sort((a, b) => {\n\n                  if (a.name.first < b.name.first) {\n                    return -1;}\n                  if (a.name.first > b.name.first) {\n                    return 1; }\n                     return 0;\n                });\n\n                updateSortedUsers(updateSort);\n              }} >First</th>\n            <th scope=\"col-2\"\n                 onClick={() => {\n                    var updateSort = [...users].sort((a, b) => {\n    \n                      if (a.name.last < b.name.last) {\n                        return -1;}\n                      if (a.name.last > b.name.last) {\n                        return 1; }\n                         return 0;\n                    });\n    \n                    updateSortedUsers(updateSort);\n                  }}>Last</th>\n            <th scope=\"col-2\">Gender</th>\n            <th scope=\"col-2\">Email</th>\n            <th scope=\"col-2\">Phone</th>\n            <th scope=\"col-2\">Photo</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedUsers.map(\n            ({\n              picture: { thumbnail },\n              phone,\n              gender,\n              email,\n              name: { first, last }\n            }) => (\n              <tr key={email}>\n                <th>{first}</th>\n                <td>{last}</td>\n                <td>{gender}</td>\n                <td>{email}</td>\n                <td>{phone}</td>\n                <td>\n                <img src={thumbnail} />\n                </td>\n              </tr>\n            )\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useEffect, useState } from \"react\";\nimport FilterFirst from \"./FilterFunction\";\nimport FilterLast from \"./FilterLast\";\nimport Table from \"./Table\";\nimport{ getUsers } from \"./API\"\nimport './App.css';\n\nfunction App() {\n  const [initialUsers, updateUsers] = useState([]);\n  const [usersToRender, updateRender] = useState([]);\n\n  useEffect(() => {\n    getUsers().then(({ data: { results } }) => updateUsers(results));\n  }, []);\n\n  return (\n    <div className=\"container\">\n    <h1>User Directory</h1>\n    <div className=\"row\"> \n      <p>\n      Search by first name below:\n    <FilterFirst users={initialUsers} updateUsers={updateRender} />\n      Search by last name below:\n    <FilterLast users={initialUsers} updateUsers={updateRender} />\n    </p>\n    </div>\n    <div className=\"row\">\n    <Table className=\"col-12\" users={usersToRender} />\n    </div>\n  \n  </div>\n   \n  );\n}\nexport default App;\n","import axios from \"axios\";\n\nexport const getUsers = function() {\n  return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}